#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Mar  8 23:04:31 2023

@author: james
"""

# =============================================================================
# 152. Maximum Product Subarray
# Given an integer array nums, find a 
# subarray
#  that has the largest product, and return the product.
# 
# The test cases are generated so that the answer will fit in a 32-bit integer.
# =============================================================================



nums = [2,3,-1,0,10,2]


dp = [[0 for _ in range(2)] for _ in range(len(nums))]

# dp[x][0] means the max product subarray
# dp[x][1] means the min product subarray

dp[0][0], dp[0][1] = nums[0], nums[0]

for i in range(1, len(nums)):
    dp[i][0] = max(dp[i-1][0] * nums[i], dp[i-1][1] * nums[i], nums[i])
    dp[i][1] = min(dp[i-1][0] * nums[i], dp[i-1][1] * nums[i], nums[i])























# dp = [[0 for _ in range(2)] for _ in range(len(nums))]

# # dp[x][0] 0 means the max product subarray
# # dp[x][1] 1 means the min product subarray
# dp[0][1], dp[0][0], res = nums[0],nums[0],nums[0]

# for i in range(1, len(nums)):
#     dp[i][0] = max(dp[i-1][0] * nums[i], dp[i-1][1] * nums[i], nums[i])
#     dp[i][1] = min(dp[i-1][0] * nums[i], dp[i-1][1] * nums[i], nums[i])
    
#     res = max(res, dp[i][0])

